name: CI Pipeline

on:
  pull_request:
    branches:
      - master
    paths-ignore: # Ignorer certains fichiers si nécessaire
      - '.github/**'
      - 'README.md'

jobs:
  tests:
    name: Run Tests and Code Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read # Lecture des fichiers
      pull-requests: write # Permet de commenter le PR avec les résultats de SonarCloud
      
    steps:
      # Étape 1 : Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v3
    
      # Étape 2 : Installer Node.js et les dépendances
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Remplacez par votre version Node.js
      
      # Installer Node.js et les dépendances
      - name: Install dependencies
        run: npm install

      # NOUVELLE ÉTAPE : Lancer le build (si pertinent)
      - name: Run Build
        run: npm run build  
        
      # Étape 3 : Lancer les tests unitaires
      - name: Run Unit Tests
        run: npm run test:unit

      # Étape 4 : Lancer les tests E2E
      - name: Run End-to-End Tests
        run: npm run test:e2e

      # Étape 5 : SonarCloud Analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Créez un secret dans "Settings > Secrets and variables"
          # Pour le debug, sinon, retirez-le après avoir trouvé le problème
          SONAR_SCANNER_DEBUG: true 
        with:
          args: >
            -Dsonar.projectKey=stef38-code_app-nounou
            -Dsonar.organization=stef38-code
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.inclusions=**/*.ts
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts
